{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templatesBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Linked Templates base url"
      },

      "defaultValue": "https://raw.githubusercontent.com/OmegaMadLab/SQLScripts/master/tcdit2017/sqlvm-alwayson-cluster/nested"
    },
    "scriptsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "DSC Scripts base url"
      },
      "defaultValue": "https://raw.githubusercontent.com/OmegaMadLab/SQLScripts/master/tcdit2017/sqlvm-alwayson-cluster/scripts"
    },
    "mainDCLocation": {
      "type": "string",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of the main Datacenter"
      },
      "defaultValue": "West Europe"
    },
    "drDCLocation": {
      "type": "string",
      "allowedValues": [
        "East US",
        "West Central US"
      ],
      "metadata": {
        "description": "Location of the DR Datacenter"
      },
      "defaultValue": "East US"
    },
    "environmentPrefix": {
      "type": "string",
      "metadata": {
        "description": "Common prefix which will compose the name of all the resource group resources"
      },
      "defaultValue": "hademo"
    },
    "mainResSuffix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for main datacenter resources which are created with fixed names"
      },
      "defaultValue": "main"
    },
    "drResSuffix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for DR datacenter resources which are created with fixed names"
      },
      "defaultValue": "dr"
    },
    "sqlStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of Sql Server Storage Account"
      },
      "defaultValue": "sqlsa"
    },
    "sqlStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Sql Server Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "adStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of DC Storage Account"
      },
      "defaultValue": "adsa"
    },
    "adStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "fswStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of File Server Storage Account"
      },
      "defaultValue": "fswsa"
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of diagnostic Storage Account"
      },
      "defaultValue": "diagsa"
    },
    "mainVirtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the main datacenter VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "mainStaticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the main datacenter subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "mainSqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the main datacenter SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/26"
    },
    "mainGWSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the main datacenter Gateway subnet created in the new VNET"
      },
      "defaultValue": "10.0.2.0/28"
    },
    "drVirtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the DR datacenter VNET in CIDR format"
      },
      "defaultValue": "172.16.0.0/16"
    },
    "drStaticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the DR datacenter subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "172.16.0.0/24"
    },
    "drSqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the DR datacenter SQL subnet created in the new VNET"
      },
      "defaultValue": "172.16.1.0/26"
    },
    "drGWSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the DR datacenter Gateway subnet created in the new VNET"
      },
      "defaultValue": "172.16.2.0/28"
    },
    "vpnSharedKey": {
      "type": "string",
      "metadata": {
        "description": "The preshared key used to establish vNet to vNet VPN"
      },
      "defaultValue": "StR0nGkEy"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "172.16.0.5"
    },
    "mainSqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the main datacenter SQL Server Internal Load Balancer"
    },
    "defaultValue": "10.0.1.9"
    },
    "drSqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the DR datacenter SQL Server Internal Load Balancer"
    },
    "defaultValue": "172.16.1.9"
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "witnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_D1v2"
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_D2v2"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service Account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service Account password"
      }
    },
    "autoPatchingDay": {
      "type": "string",
      "allowedValues": [
        "Never",
        "Everyday",
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "metadata": {
        "description": "The day of a week for auto patching"
      },
      "defaultValue": "Sunday"
    },
    "autoPatchingStartHour": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23"
      ],
      "metadata": {
        "description": "The start hour of a day for auto patching"
      },
      "defaultValue": "2"
    },
    "sqlAOAGName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AlwaysOn Group Name"
      },
      "defaultValue": "alwayson-ag"
    },
    "sqlAOListenerPort": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener port"
      },
      "defaultValue": "1433"
    },
    "sqlAOListenerName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener Name"
      },
      "defaultValue": "alwayson-ag-listener"
    },
    "sqlServerVersion": {
      "type": "string",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP1-WS2012R2",
        "SQL2016-WS2012R2"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQL2016-WS2012R2"
    },
    "sqlServerEdition": {
        "type": "string",
        "allowedValues": [
          "Enterprise",
          "SQLDEV"
        ],
        "metadata": {
          "description": "The Sql Server edition - Enterprise or Developer (SQL2016 only)"
        },
        "defaultValue": "SQLDEV"
    },
    "workloadType": {
      "type": "string",
      "allowedValues": [
        "GENERAL",
        "OLTP",
        "DW"
      ],
      "metadata": {
        "description": "The Sql VM work load type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"
      },
      "defaultValue": "GENERAL"
    }
  },
  "variables": {
    "subnetNames": {
      "staticSubnetName": "staticSubnet",
      "sqlSubnetName": "sqlSubnet"
    },
    "mainVirtualNetworkName": "[concat(parameters('environmentPrefix'),'-VNET-',parameters('mainResSuffix'))]",
    "drVirtualNetworkName": "[concat(parameters('environmentPrefix'),'-VNET-',parameters('drResSuffix'))]",
    "mainSubnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('mainStaticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('mainSqlSubnet')]"
        }
      },
      {
        "name": "GatewaySubnet",
        "properties": {
          "addressPrefix": "[parameters('mainGWSubnet')]"
        }
      }
    ],
    "drSubnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('drStaticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('drSqlSubnet')]"
        }
      },
      {
        "name": "GatewaySubnet",
        "properties": {
          "addressPrefix": "[parameters('drGWSubnet')]"
        }
      }
    ],
    "mainGWName": "[concat(parameters('environmentPrefix'),'-VnetGW-',parameters('mainResSuffix'))]",
    "drGWName": "[concat(parameters('environmentPrefix'),'-VnetGW-',parameters('drResSuffix'))]",
    "mainVnetConnectionName": "[concat(parameters('environmentPrefix'),'-Conn-',parameters('mainResSuffix'), '2', parameters('drResSuffix'))]",
    "drVnetConnectionName": "[concat(parameters('environmentPrefix'),'-Conn-',parameters('drResSuffix'), '2', parameters('mainResSuffix'))]",
    "mainGWPublicIPName": "[concat(parameters('environmentPrefix'),'-VnetGWip-',parameters('mainResSuffix'))]",
    "drGWPublicIPName": "[concat(parameters('environmentPrefix'),'-VnetGWip-',parameters('drResSuffix'))]",
    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "mainSqlLBFE": "[concat(parameters('environmentPrefix'),'-sqlLBFE-',parameters('mainResSuffix'))]",
      "drSqlLBFE": "[concat(parameters('environmentPrefix'),'-sqlLBFE-',parameters('drResSuffix'))]",
      "mainSqlLBBE": "[concat(parameters('environmentPrefix'),'-sqlLBBE-',parameters('mainResSuffix'))]",
      "drSqlLBBE": "[concat(parameters('environmentPrefix'),'-sqlLBBE-',parameters('drResSuffix'))]",
      "mainSqlLBName": "[concat(parameters('environmentPrefix'),'-sqlLoadBalancer-',parameters('mainResSuffix'))]",
      "drSqlLBName": "[concat(parameters('environmentPrefix'),'-sqlLoadBalancer-',parameters('drResSuffix'))]"
    },
    "mainVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('mainVirtualNetworkName'))]",
    "mainStaticSubnetRef": "[concat(variables('mainVnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "mainSqlSubnetRef": "[concat(variables('mainVnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "drVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('drVirtualNetworkName'))]",
    "drStaticSubnetRef": "[concat(variables('drVnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "drSqlSubnetRef": "[concat(variables('drVnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "sqlAOEPName": "[concat(parameters('environmentPrefix'),'-sqlhadr')]",
    "ids": {
      "mainSqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').mainSqlLBName)]",
      "drSqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').drSqlLBName)]"
    },
    "derivedIds": {
      "mainSqlBEAddressPoolID": "[concat(variables('ids').mainSqllbID,'/backendAddressPools/',variables('lbSettings').mainSqlLBBE)]",
      "mainSqllbFEConfigID": "[concat(variables('ids').mainSqllbID,'/frontendIPConfigurations/',variables('lbSettings').mainSqlLBFE)]",
      "mainSqllbProbeID": "[concat(variables('ids').mainSqllbID,'/probes/',parameters('environmentPrefix'),'-',variables('SQLAOProbe'),'-',parameters('mainResSuffix'))]",
      "drSqlBEAddressPoolID": "[concat(variables('ids').drSqllbID,'/backendAddressPools/',variables('lbSettings').drSqlLBBE)]",
      "drSqllbFEConfigID": "[concat(variables('ids').drSqllbID,'/frontendIPConfigurations/',variables('lbSettings').drSqlLBFE)]",
      "drSqllbProbeID": "[concat(variables('ids').drSqllbID,'/probes/',parameters('environmentPrefix'),'-',variables('SQLAOProbe'),'-',parameters('drResSuffix'))]"
    },
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "SqlAvailabilitySet",
        "adAvailabilitySetName": "AdAvailabilitySet"
      },
      "vmContainerName": "vhds",
      "adPDCVMName": "[concat(parameters('environmentPrefix'),'-addc-',parameters('mainResSuffix'))]",
      "adBDCVMName": "[concat(parameters('environmentPrefix'),'-addc-',parameters('drResSuffix'))]",
      "mainSqlVMName": "[concat(parameters('environmentPrefix'),'-sql-',parameters('mainResSuffix'))]",
      "drSqlVMName": "[concat(parameters('environmentPrefix'),'-sql-',parameters('drResSuffix'))]",
      "sqlwVMName": "[concat(parameters('environmentPrefix'),'-fsw-',parameters('mainResSuffix'))]",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "[parameters('sqlServerVersion')]",
      "sqlImageSKU" : "[parameters('sqlServerEdition')]",
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000
    },
    "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    "adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
    "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "primaryDCIPAddressNameWithSuffix": "[concat(variables('vmSettings').adPDCVMName,'-ip')]",
    "backupDCIPAddressNameWithSuffix": "[concat(variables('vmSettings').adBDCVMName,'-ip')]",
    "clusterName": "cluster-sqlha",
    "sharePath": "cluster-fsw",
    "configuration": {
      "vnet2vnetTemplateURL": "[concat(parameters('templatesBaseUrl'),'/vnet2vnet.json')]",
      "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/vnet-with-dns-server.json')]",
      "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/nic.json')]",
      "rdpIPAdressSetupURL": "[concat(parameters('templatesBaseUrl'),'/publicip-rdp.json')]",
      "vnetSetupURL": "[concat(parameters('templatesBaseUrl'),'/vnet-new.json')]",
      "setupLBsUrl": "[concat(parameters('templatesBaseUrl'),'/setupLBs.json')]",
      "creatingNicsUrl": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
      "storageAccountVirtualNetworkPublicIP": "[concat(parameters('templatesBaseUrl'),'/storageAccountVirtualNetworkPublicIP.json')]",
      "provisioningADVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningADVMs.json')]",
      "provisioningSqlAvSets": "[concat(parameters('templatesBaseUrl'),'/provisioningSqlAvSets.json')]",
      "provisioningFswVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningFswVMs.json')]",
      "provisioningSqlVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningSqlVMs_')]",
      "configuringSqlVMs": "[concat(parameters('templatesBaseUrl'),'/prepareSqlServer.json')]",
      "configuringBackupADVM": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json')]",
      "configuringWSFC": "[concat(parameters('templatesBaseUrl'),'/configuringWSFC.json')]",
      "preparingAlwaysOnSqlServer": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json')]",
      "configuringAlwaysOn": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json')]",
      "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip')]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADBDC.ps1.zip')]",
      "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
      "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip')]",
      "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip')]",
      "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster_custom"
    },
    "Monday": true,
    "Tuesday": true,
    "Wednesday": true,
    "Thursday": true,
    "Friday": true,
    "Saturday": true,
    "Sunday": true,
    "Never": false,
    "Everyday": true
  },
  "resources": [
    {
      "name": "mainStorageAccountVirtualNetworkPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics on main datacenter. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').storageAccountVirtualNetworkPublicIP]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "sqlStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('sqlStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "adStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('adStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "fswStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('fswStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "diagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "adStorageAccountType": {
            "value": "[parameters('adStorageAccountType')]"
          },
          "virtualNetworkName": {
            "value": "[variables('mainVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('mainVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('mainSubnets')]"
          },
          "DCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
          }
        }
      }
    },
    {
      "name": "drStorageAccountVirtualNetworkPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics on main datacenter. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').storageAccountVirtualNetworkPublicIP]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "sqlStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('sqlStorageAccountName'),parameters('drResSuffix'))]"
          },
          "adStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('adStorageAccountName'),parameters('drResSuffix'))]"
          },
          "fswStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('fswStorageAccountName'),parameters('drResSuffix'))]"
          },
          "diagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('drResSuffix'))]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "adStorageAccountType": {
            "value": "[parameters('adStorageAccountType')]"
          },
          "virtualNetworkName": {
            "value": "[variables('drVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('drVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('drSubnets')]"
          },
          "DCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressNameWithSuffix')]"
          }          
        }
      }
    },
    {
      "name": "vNet2vNetInfrastructure",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create VNET Gateways and implement VNET to VNET VPN",
      "dependsOn": [
        "Microsoft.Resources/deployments/mainStorageAccountVirtualNetworkPublicIP",
        "Microsoft.Resources/deployments/drStorageAccountVirtualNetworkPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnet2vnetTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location1": {
            "value": "[parameters('mainDCLocation')]"
          },
          "location2": {
            "value": "[parameters('drDCLocation')]"
          },
          "virtualNetworkName1": {
            "value": "[variables('mainVirtualNetworkName')]"
          },
          "virtualNetworkName2": {
            "value": "[variables('drVirtualNetworkName')]"
          },
          "gatewayPublicIPName1": {
            "value": "[variables('mainGWPublicIPName')]"
          },
          "gatewayPublicIPName2": {
            "value": "[variables('drGWPublicIPName')]"
          },
          "gatewayName1": {
            "value": "[variables('mainGWName')]"
          },
          "gatewayName2": {
            "value": "[variables('drGWName')]"
          },
          "ConnectionName1": {
            "value": "[variables('mainVnetConnectionName')]"
          },
          "ConnectionName2": {
            "value": "[variables('drVnetConnectionName')]"
          },
          "SharedKey":
          {
            "value": "[parameters('vpnSharedKey')]"
          }
        }
      }
    },
    {
      "name": "mainLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL on main datacenter",
      "dependsOn": [
        "Microsoft.Resources/deployments/mainStorageAccountVirtualNetworkPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').setupLBsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').mainSqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').mainSqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('mainSqlLBIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('mainSqlSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').mainSqlLBBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').mainSqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').mainSqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').mainSqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('SQLAOProbe'),'-',parameters('mainResSuffix'))]"
          }
        }
      }
    },
    {
      "name": "drLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL on DR datacenter",
      "dependsOn": [
        "Microsoft.Resources/deployments/drStorageAccountVirtualNetworkPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').setupLBsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').drSqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').drSqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('drSqlLBIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('drSqlSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').drSqlLBBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').drSqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').drSqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').drSqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('SQLAOProbe'),'-',parameters('drResSuffix'))]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/mainLoadBalancers",
        "Microsoft.Resources/deployments/drLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "mainLocation": {
            "value": "[parameters('mainDCLocation')]"
          },
          "drLocation": {
            "value": "[parameters('drDCLocation')]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "mainStaticSubnetRef": {
            "value": "[variables('mainStaticSubnetRef')]"
          },
          "drStaticSubnetRef": {
            "value": "[variables('drStaticSubnetRef')]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "mainSqlVMName": {
            "value": "[variables('vmSettings').mainSqlVMName]"
          },
          "mainSqlSubnetRef": {
            "value": "[variables('mainSqlSubnetRef')]"
          },
          "drSqlVMName": {
            "value": "[variables('vmSettings').drSqlVMName]"
          },
          "drSqlSubnetRef": {
            "value": "[variables('drSqlSubnetRef')]"
          },          
          "mainSqlBEAddressPoolID": {
            "value": "[variables('derivedIds').mainSqlBEAddressPoolID]"
          },
          "drSqlBEAddressPoolID": {
            "value": "[variables('derivedIds').drSqlBEAddressPoolID]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "primaryDCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
          },
          "backupDCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressNameWithSuffix')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningADVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningADVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "mainLocation": {
            "value": "[parameters('mainDCLocation')]"
          },
          "drLocation": {
            "value": "[parameters('drDCLocation')]"
          },
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "mainAdAvailabilitySetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.adAvailabilitySetName,'-',parameters('mainResSuffix'))]"
          },
          "drAdAvailabilitySetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.adAvailabilitySetName,'-',parameters('drResSuffix'))]"
          },
          "mainAdStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('adStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "drAdStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('adStorageAccountName'),parameters('drResSuffix'))]"
          },
          "mainDiagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "drDiagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('drResSuffix'))]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "adImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "adImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          }
        }
      }
    },
    {
      "name": "mainVnetUpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningADVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "virtualNetworkName": {
            "value": "[variables('mainVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('mainVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('mainSubnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "drVnetUpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningADVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "virtualNetworkName": {
            "value": "[variables('drVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('drVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('drSubnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ConfiguringBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/drVnetUpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringBackupADVM]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adminUserName": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('configuration').adBDCConfigurationFunction]"
          },
          "adBDCModulesURL": {
            "value": "[variables('configuration').adBDCModulesURL]"
          }
        }
      }
    },
    {
      "name": "mainVnetUpdatingDNStoBothADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringBackupADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "virtualNetworkName": {
            "value": "[variables('mainVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('mainVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('mainSubnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "drVnetUpdatingDNStoBothADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringBackupADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "virtualNetworkName": {
            "value": "[variables('drVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('drVirtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('drSubnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adBDCNICIPAddress')]",
              "[parameters('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "provisionSqlAvSets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningSqlAvSets]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
                    "mainLocation": {
            "value": "[parameters('mainDCLocation')]"
          },
          "drLocation": {
            "value": "[parameters('drDCLocation')]"
          },
          "mainSqlAvSetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.sqlAvailabilitySetName,'-',parameters('mainResSuffix'))]"
          },
          "drSqlAvSetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.sqlAvailabilitySetName,'-',parameters('drResSuffix'))]"
          }
        }
      }
    },
    {
      "name": "ProvisioningFswVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/provisionSqlAvSets",
        "Microsoft.Resources/deployments/provisioningADVMs",
        "Microsoft.Resources/deployments/mainVnetUpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningFswVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "sqlAvailabilitySetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.sqlAvailabilitySetName,'-',parameters('mainResSuffix'))]"
          },
          "fswStorageName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('fswStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "diagStorageName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "witnessVMSize": {
            "value": "[parameters('witnessVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "fswImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "fswImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "fswImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "fswConfigurationFunction": {
            "value": "[variables('configuration').fswConfigurationFunction]"
          },
          "fswModulesURL": {
            "value": "[variables('configuration').fswModulesURL]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "sharePath": {
            "value": "[variables('sharePath')]"
          }
        }
      }
    },
    {
      "name": "mainPreparingSqlServerVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/provisionSqlAvSets",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/provisioningADVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('configuration').provisioningSqlVMs,parameters('sqlStorageAccountType'),'.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').mainSqlVMName]"
          },
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('sqlStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "diagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('mainResSuffix'))]"
          },
          "sqlAvailabilitySetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.sqlAvailabilitySetName,'-',parameters('mainResSuffix'))]"
          },
          "noOfSqlVm": {
            "value": 2
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVmSize')]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
              "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables('vmSettings').sqlImageSKU]"
          },
          "autoPatchingDay": {
            "value": "[parameters('autoPatchingDay')]"
          },
          "autoPatchingStartHour": {
            "value": "[parameters('autoPatchingStartHour')]"
          },
          "autoPatchingEnable": {
            "value": "[variables(parameters('autoPatchingDay'))]"
          }
        }
      }
    },
    {
      "name": "mainConfiguringSqlServerVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/mainPreparingSqlServerVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringSqlVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').mainSqlVMName]"
          },
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('configuration').sqlAOPrepareModulesURL]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "noOfSqlVm": {
            "value": 2
          },
          "numberOfDisks": {
            "value": "2"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    },
    {
      "name": "drPreparingSqlServerVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/provisionSqlAvSets",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/provisioningADVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('configuration').provisioningSqlVMs,parameters('sqlStorageAccountType'),'.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').drSqlVMName]"
          },
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('sqlStorageAccountName'),parameters('drResSuffix'))]"
          },
          "diagStorageAccountName": {
            "value": "[concat(parameters('environmentPrefix'),parameters('diagStorageAccountName'),parameters('drResSuffix'))]"
          },
          "sqlAvailabilitySetName": {
            "value": "[concat(parameters('environmentPrefix'),'-',variables('vmSettings').availabilitySets.sqlAvailabilitySetName,'-',parameters('drResSuffix'))]"
          },
          "noOfSqlVm": {
            "value": 1
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVmSize')]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
              "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables('vmSettings').sqlImageSKU]"
          },
          "autoPatchingDay": {
            "value": "[parameters('autoPatchingDay')]"
          },
          "autoPatchingStartHour": {
            "value": "[parameters('autoPatchingStartHour')]"
          },
          "autoPatchingEnable": {
            "value": "[variables(parameters('autoPatchingDay'))]"
          }
        }
      }
    },
    {
      "name": "drConfiguringSqlServerVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/drPreparingSqlServerVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringSqlVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').drSqlVMName]"
          },
          "location": {
            "value": "[parameters('drDCLocation')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('configuration').sqlAOPrepareModulesURL]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "noOfSqlVm": {
            "value": 1
          },
          "numberOfDisks": {
            "value": "2"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    },
        {
      "name": "mainConfiguringWSFCnodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/mainPreparingSqlServerVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringWSFC]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').mainSqlVMName]"
          },
          "location": {
            "value": "[parameters('mainDCLocation')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "createClusterModulesURL": {
            "value": "[variables('configuration').createClusterModulesURL]"
          },
          "createClusterConfigurationFunction": {
            "value": "[variables('configuration').createClusterConfigurationFunction]"
          },
          "clusterName": {
            "value": "[variables('clusterName')]"
          },
          "sharePath": {
            "value": "[concat('\\\\',variables('vmSettings').sqlwVMName,'\\',variables('sharePath'))]"
          },
          "sqlwVMName": {
            "value": "variables('vmSettings').sqlwVMName"
          },
          "noOfSqlVm": {
            "value": 2
          }
        }
      }
    }

  ],
  "outputs": {}
}

